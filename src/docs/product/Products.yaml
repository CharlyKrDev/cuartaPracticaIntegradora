openapi: 3.0.0
info:
  title: Products API
  version: 1.0.0
  description: API para la gestión de productos

servers:
  - url: http://localhost:8080/api

paths:
  /api/products:
    get:
      summary: Obtiene una lista de productos
      tags:
        - Product
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Límite de productos por página
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Página actual
        - in: query
          name: sort
          schema:
            type: string
          description: Ordenar por precio (ascendente o descendente)
        - in: query
          name: debug
          schema:
            type: boolean
          description: Modo debug
      responses:
        200:
          description: Lista de productos
          content:
            application/json:
              schema:
                type: object
                properties:
                  productos:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  totalPages:
                    type: integer
                  page:
                    type: integer
                  hasPrevPage:
                    type: boolean
                  hasNextPage:
                    type: boolean
                  prevPage:
                    type: integer
                    nullable: true
                  nextPage:
                    type: integer
                    nullable: true
                  prevLink:
                    type: string
                    nullable: true
                  nextLink:
                    type: string
                    nullable: true
                  isValid:
                    type: boolean
                  carts:
                    type: array
                    items:
                      type: object
        400:
          description: Error en los parámetros de consulta
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: No se encontraron productos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      summary: Agrega un nuevo producto
      tags:
        - Product
      security:
        - bearerAuth: []
      requestBody:
        description: Datos del producto
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        200:
          description: Producto agregado correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        400:
          description: Error en la creación del producto
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/products/{pid}:
    get:
      summary: Obtiene un producto por su ID
      tags:
        - Product
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: ID del producto
      responses:
        200:
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        404:
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: Elimina un producto por su ID
      tags:
        - Product      
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: ID del producto
      responses:
        200:
          description: Producto eliminado correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        404:
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      summary: Actualiza un producto existente
      tags:
        - Product      
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: ID del producto
      requestBody:
        description: Datos actualizados del producto
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        200:
          description: Producto actualizado correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        400:
          description: Error en la actualización del producto
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: ID único del producto
        title:
          type: string
          description: Título del producto
        description:
          type: string
          description: Descripción del producto
        code:
          type: string
          description: Código del producto
        price:
          type: number
          description: Precio del producto
        status:
          type: boolean
          description: Estado del producto (disponible o no)
        stock:
          type: integer
          description: Cantidad en stock
        category:
          type: string
          description: Categoría del producto
        thumbnail:
          type: array
          items:
            type: string
          description: URLs de imágenes del producto
        owner:
          type: string
          description: Dueño del producto

    Error:
      type: object
      properties:
        error:
          type: string
          description: Mensaje de error

    Message:
      type: object
      properties:
        message:
          type: string
          description: Mensaje informativo

securitySchemes:
  bearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT
