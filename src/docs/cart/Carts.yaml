openapi: 3.0.0
info:
  title: Carts API
  description: API para gestionar los carritos de compra.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/carts
    description: Servidor local para pruebas

paths:
  /api/carts:
    get:
      summary: Obtener todos los carritos
      tags:
        - Cart
      security:
        - bearerAuth: []
      responses:
        200:
          description: Lista de todos los carritos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        500:
          description: Error al obtener los carritos

    post:
      summary: Crear un nuevo carrito
      tags:
        - Cart
      security:
        - bearerAuth: []
      responses:
        201:
          description: Carrito creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        500:
          description: Error al crear el carrito

  /api/carts/cart/{cid}:
    get:
      summary: Obtener un carrito por ID
      tags:
        - Cart
      parameters:
        - name: cid
          in: path
          required: true
          description: ID del carrito
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Carrito encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        500:
          description: Error al obtener el carrito por ID

    delete:
      summary: Borrar un carrito por ID
      tags:
        - Cart
      parameters:
        - name: cid
          in: path
          required: true
          description: ID del carrito a borrar
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Carrito borrado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Carrito ID: {cid} borrado correctamente!"
        500:
          description: Error al borrar el carrito

  /api/carts/{cid}/products/{pid}:
    put:
      summary: Agregar un producto al carrito
      tags:
        - Cart
      parameters:
        - name: cid
          in: path
          required: true
          description: ID del carrito
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        201:
          description: Producto agregado al carrito correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        500:
          description: Error al agregar el producto al carrito

    delete:
      summary: Eliminar un producto del carrito
      tags:
        - Cart
      parameters:
        - name: cid
          in: path
          required: true
          description: ID del carrito
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Producto eliminado del carrito correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        500:
          description: Error al eliminar el producto del carrito

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: string
          description: ID del carrito
          example: "60b8d295f1d3c516b5a60e3d"
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                description: ID del producto
                example: "60b8d295f1d3c516b5a60e3f"
              quantity:
                type: integer
                description: Cantidad del producto en el carrito
                example: 2
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
